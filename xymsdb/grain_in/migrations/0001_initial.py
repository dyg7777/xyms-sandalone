# Generated by Django 4.2.5 on 2023-11-17 07:53

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('login', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AcquisitionVarieties',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('AV_name', models.CharField(default='玉米', help_text='收购品种', max_length=50, unique=True)),
                ('find_code', models.CharField(blank=True, default='', help_text='查询编码', max_length=20, null=True, unique=True)),
                ('py_abbreviation', models.CharField(blank=True, default='', help_text='拼音简写', max_length=20, null=True)),
                ('acquisitioncaps', models.DecimalField(decimal_places=4, help_text='收购上限', max_digits=12)),
            ],
        ),
        migrations.CreateModel(
            name='CarDriverAndVehicleInformations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('driver_name', models.CharField(blank=True, default='', help_text='司机姓名', max_length=80, null=True)),
                ('driver_uncode', models.CharField(blank=True, default='', help_text='司机身份证号', max_length=80, null=True)),
                ('driver_uncode_photo', models.TextField(blank=True, default='', help_text='司机身份证照片', null=True)),
                ('driver_photo', models.TextField(blank=True, default='', help_text='司机照片', null=True)),
                ('vehicle_province', models.CharField(blank=True, default='', help_text='牌照号', max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GBCornInformations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('GB_filename', models.CharField(help_text='国标文件号', max_length=50)),
                ('GB_file_contents', models.TextField(blank=True, default='', help_text='文件内容', null=True)),
                ('purchase_price', models.DecimalField(decimal_places=6, help_text='等级价格', max_digits=12)),
                ('purchase_name', models.CharField(default='', help_text='等级名称', max_length=20, unique=True)),
                ('test_weight_high', models.DecimalField(blank=True, decimal_places=1, help_text='容重上限3.1', max_digits=6, null=True)),
                ('test_weight_low', models.DecimalField(blank=True, decimal_places=1, help_text='容重下限3.1', max_digits=6, null=True)),
                ('defective_kernels', models.DecimalField(blank=True, decimal_places=1, help_text='不完善粒标准3.2', max_digits=6, null=True)),
                ('insect_damaged_kernels', models.DecimalField(blank=True, decimal_places=1, help_text='虫蚀粒标准3.2.1', max_digits=6, null=True)),
                ('spotted_kernels', models.DecimalField(blank=True, decimal_places=1, help_text='病斑粒标准3.2.2', max_digits=6, null=True)),
                ('broken_kernels', models.DecimalField(blank=True, decimal_places=1, help_text='破损粒标准3.2.3', max_digits=6, null=True)),
                ('sprouted_kernels', models.DecimalField(blank=True, decimal_places=1, help_text='生芽粒标准3.2.4', max_digits=6, null=True)),
                ('moldy_kernels', models.DecimalField(blank=True, decimal_places=1, help_text='生霉粒标准3.2.5', max_digits=6, null=True)),
                ('heat_damaged_kernels', models.DecimalField(blank=True, decimal_places=1, help_text='热损伤粒标准3.2.6', max_digits=6, null=True)),
                ('nature_heat_damaged_kernels', models.DecimalField(blank=True, decimal_places=1, help_text='自然热损伤粒标准3.2.6.1', max_digits=6, null=True)),
                ('drying_heat_damaged_kernels', models.DecimalField(blank=True, decimal_places=1, help_text='烘干热损伤粒标准3.2.6.2', max_digits=6, null=True)),
                ('foreign_matter', models.DecimalField(blank=True, decimal_places=1, help_text='杂质标准3.3', max_digits=6, null=True)),
                ('throughs', models.DecimalField(blank=True, decimal_places=1, help_text='筛下物标准3.3.1', max_digits=6, null=True)),
                ('inorganic_impurities', models.DecimalField(blank=True, decimal_places=1, help_text='无机杂质3.3.2', max_digits=6, null=True)),
                ('organic_impurities', models.DecimalField(blank=True, decimal_places=1, help_text='有机杂质3.3.3', max_digits=6, null=True)),
                ('colour', models.CharField(blank=True, default='正常', help_text='色泽3.4', max_length=10, null=True)),
                ('odour', models.CharField(blank=True, default='正常', help_text='气味3.5', max_length=10, null=True)),
                ('moisture_content', models.DecimalField(blank=True, decimal_places=1, help_text='水份标准3.6', max_digits=6, null=True)),
                ('severely_moldy_kernels', models.DecimalField(blank=True, decimal_places=1, help_text='霉变粒标准3.7', max_digits=6, null=True)),
                ('eidt_datetime', models.DateTimeField(auto_now_add=True, help_text='创建时间')),
                ('create_datetime', models.DateTimeField(auto_now=True, help_text='最后修改时间')),
                ('acquisitionVarietiesid', models.ForeignKey(help_text='收购品种库ID', on_delete=django.db.models.deletion.CASCADE, related_name='acquisition_varities', to='grain_in.acquisitionvarieties')),
            ],
        ),
        migrations.CreateModel(
            name='GrainSellerInformations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grainseller_name', models.CharField(default='', help_text='售粮人姓名', max_length=60)),
                ('grainseller_uncode', models.CharField(blank=True, default='', help_text='身份证号', max_length=20, null=True)),
                ('grainseller_uncode_photo', models.TextField(blank=True, default='', help_text='售粮人身份证照片', null=True)),
                ('grainseller_photo', models.TextField(blank=True, default='', help_text='售粮人本人照片', null=True)),
                ('grainseller_sex', models.CharField(blank=True, default='', help_text='售粮人性别', max_length=10, null=True)),
                ('grainseller_ethnic', models.CharField(blank=True, default='', help_text='民族', max_length=100, null=True)),
                ('grainseller_birthday', models.CharField(blank=True, default='', help_text='出生年月', max_length=20, null=True)),
                ('grainseller_address', models.CharField(blank=True, default='', help_text='身份证地址', max_length=120, null=True)),
                ('grainseller_issuing_authority', models.CharField(blank=True, default='', help_text='发证机关', max_length=120, null=True)),
                ('grainseller_expiration_date', models.CharField(blank=True, default='', help_text='证件有效期', max_length=30, null=True)),
                ('grainseller_phone', models.CharField(blank=True, default='', help_text='联系电话', max_length=20, null=True)),
                ('grainseller_photo_in_uncode', models.TextField(blank=True, default='', help_text='售粮人身份证内照片', null=True)),
                ('grainseller_bank_name', models.CharField(blank=True, default='', help_text='开户银行名称', max_length=120, null=True)),
                ('grainseller_bank_card_number', models.CharField(blank=True, default='', help_text='银行卡号', max_length=30, null=True)),
                ('grainseller_bank_account', models.CharField(blank=True, default='', help_text='银行账号', max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LocationWarehouseNumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_number', models.CharField(blank=True, default='', help_text='仓号', max_length=30, null=True, unique=True)),
                ('warehouse_number', models.CharField(blank=True, default='', help_text='货位号', max_length=30, null=True, unique=True)),
                ('location_total_capacity', models.DecimalField(decimal_places=4, help_text='仓号总容量', max_digits=12)),
                ('warehouse_total_capacity', models.DecimalField(decimal_places=4, help_text='货位容量', max_digits=12)),
                ('find_code', models.CharField(blank=True, default='', help_text='查询编码', max_length=20, null=True, unique=True)),
                ('py_abbreviation', models.CharField(default='', help_text='拼音简写', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='OwnerForGoods',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ownerforgoods_name', models.CharField(default='企业私有', help_text='货权人名称', max_length=120, unique=True)),
                ('ownerforgoods_uncode', models.CharField(default='', help_text='货权人代码', max_length=100)),
                ('ownerforgoods_phonenumber', models.CharField(blank=True, default='', help_text='货权人联系方式', max_length=100, null=True)),
                ('co_owners', models.CharField(blank=True, default='', help_text='货物共有人', max_length=120, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Packaging',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('packag_name', models.CharField(blank=True, default='散积', help_text='包装物名称', max_length=30, null=True, unique=True)),
                ('find_code', models.CharField(blank=True, default='', help_text='查询编码', max_length=20, null=True, unique=True)),
                ('py_abbreviation', models.CharField(default='', help_text='拼音简写', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='QualityInspectionDeductionStandardBack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('operation_type', models.CharField(blank=True, default='', help_text='操作类型，例如删除、修改', max_length=50, null=True)),
                ('file_eidt_datetime', models.DateTimeField(auto_now_add=True, help_text='创建时间')),
                ('file_number', models.CharField(blank=True, default='', help_text='文件号', max_length=50, null=True)),
                ('file_contents', models.TextField(default='', help_text='文件内容')),
                ('file_create_datetime', models.DateTimeField(auto_now_add=True, help_text='创建时间')),
                ('file_edit_datetime', models.DateTimeField(auto_now=True, help_text='最后修改时间')),
                ('field_name', models.CharField(blank=True, default='', help_text='对应字段名', max_length=100, null=True)),
                ('chinese_annotation', models.CharField(blank=True, default='', help_text='中文标注', max_length=100, null=True)),
                ('range_upper_limit', models.DecimalField(decimal_places=2, help_text='范围上限', max_digits=10)),
                ('range_lower_limit', models.DecimalField(decimal_places=2, help_text='范围下限', max_digits=10)),
                ('operator_upper_limit', models.CharField(blank=True, default='', help_text='上限数学运算符', max_length=10, null=True)),
                ('operator_lower_limit', models.CharField(blank=True, default='', help_text='下限数学运算符', max_length=10, null=True)),
                ('deduction_ratio', models.DecimalField(decimal_places=2, help_text='扣减比例', max_digits=10)),
                ('increment_scale', models.DecimalField(decimal_places=2, help_text='增量比例', max_digits=10)),
                ('index_create_datetime', models.DateTimeField(auto_now_add=True, help_text='创建时间')),
                ('index_edit_datetime', models.DateTimeField(auto_now=True, help_text='最后修改时间')),
            ],
        ),
        migrations.CreateModel(
            name='QualityInspectionDeductionStandardFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_number', models.CharField(blank=True, default='', help_text='文件号', max_length=50, null=True)),
                ('file_contents', models.TextField(default='', help_text='文件内容')),
                ('create_datetime', models.DateTimeField(auto_now_add=True, help_text='创建时间')),
                ('edit_datetime', models.DateTimeField(auto_now=True, help_text='最后修改时间')),
                ('status', models.CharField(blank=True, default='1', help_text='记录状态0失效', max_length=2, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='VehicleProvince',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_id', models.CharField(blank=True, default='', help_text='分类编号', max_length=10, null=True, unique=True)),
                ('province_id', models.CharField(blank=True, default='', help_text='省份代码', max_length=20, null=True, unique=True)),
                ('province_name', models.CharField(default='', help_text='省份名称', max_length=120, unique=True)),
                ('province_code', models.CharField(default='', help_text='省份简称', max_length=10, unique=True)),
                ('city_id', models.CharField(blank=True, default='', help_text='城市代码', max_length=20, null=True, unique=True)),
                ('city_name', models.CharField(default='', help_text='城市名称', max_length=120, unique=True)),
                ('city_code', models.CharField(default='', help_text='城市简称', max_length=10, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='VehicleType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicle_type', models.CharField(blank=True, default='', help_text='车辆类型', max_length=30, null=True, unique=True)),
                ('find_code', models.CharField(blank=True, default='', help_text='查询编码', max_length=20, null=True, unique=True)),
                ('py_abbreviation', models.CharField(default='', help_text='拼音简写', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='UnloadingFee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unloadingfee_price', models.DecimalField(decimal_places=4, help_text='卸车费按公斤计算', max_digits=12)),
                ('varieties_id', models.ForeignKey(help_text='品种ID', on_delete=django.db.models.deletion.CASCADE, to='grain_in.acquisitionvarieties')),
            ],
        ),
        migrations.CreateModel(
            name='QualityInspectionDeductionStandard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_name', models.CharField(blank=True, default='', help_text='对应字段名', max_length=100, null=True)),
                ('chinese_annotation', models.CharField(blank=True, default='', help_text='中文标注', max_length=100, null=True)),
                ('range_upper_limit', models.DecimalField(decimal_places=2, help_text='范围上限', max_digits=10)),
                ('range_lower_limit', models.DecimalField(decimal_places=2, help_text='范围下限', max_digits=10)),
                ('operator_upper_limit', models.CharField(blank=True, default='', help_text='上限数学运算符', max_length=10, null=True)),
                ('operator_lower_limit', models.CharField(blank=True, default='', help_text='下限数学运算符', max_length=10, null=True)),
                ('deduction_ratio', models.DecimalField(decimal_places=2, help_text='扣减比例', max_digits=10)),
                ('increment_scale', models.DecimalField(decimal_places=2, help_text='增量比例', max_digits=10)),
                ('create_datetime', models.DateTimeField(auto_now_add=True, help_text='创建时间')),
                ('edit_datetime', models.DateTimeField(auto_now=True, help_text='最后修改时间')),
                ('status', models.CharField(blank=True, default='1', help_text='记录状态0失效', max_length=2, null=True)),
                ('file_id', models.ForeignKey(help_text='对应质检文件ID号', on_delete=django.db.models.deletion.CASCADE, to='grain_in.qualityinspectiondeductionstandardfile')),
            ],
        ),
        migrations.CreateModel(
            name='MoisturePrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('moisture', models.DecimalField(blank=True, decimal_places=4, help_text='水份值', max_digits=7, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=4, help_text='水份对应价格', max_digits=7, null=True)),
                ('purchase_id', models.ForeignKey(blank=True, help_text='等级标准', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='grain_in.gbcorninformations')),
                ('varieties_id', models.ForeignKey(blank=True, help_text='品种ID', null=True, on_delete=django.db.models.deletion.CASCADE, to='grain_in.acquisitionvarieties')),
            ],
        ),
        migrations.CreateModel(
            name='grain_in_main',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('main_guid', models.CharField(default='', help_text='记录的UID', max_length=60, unique=True)),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='记录创建时间')),
                ('grain_type', models.CharField(blank=True, help_text='粮食类型', max_length=50, null=True)),
                ('acquisition_type', models.CharField(blank=True, help_text='收购类型', max_length=50, null=True)),
                ('test_sheets_number', models.CharField(blank=True, help_text='化验单号', max_length=50, null=True)),
                ('upload_code', models.CharField(blank=True, help_text='传输编号', max_length=50, null=True)),
                ('grainseller_name', models.CharField(default='', help_text='售粮人姓名', max_length=60)),
                ('grainseller_uncode', models.CharField(blank=True, default='', help_text='身份证号', max_length=20, null=True)),
                ('grainseller_uncode_photo', models.TextField(blank=True, default='', help_text='售粮人身份证照片', null=True)),
                ('grainseller_photo', models.TextField(blank=True, default='', help_text='售粮人本人照片', null=True)),
                ('grainseller_sex', models.CharField(blank=True, default='', help_text='售粮人性别', max_length=10, null=True)),
                ('grainseller_ethnic', models.CharField(blank=True, default='', help_text='民族', max_length=100, null=True)),
                ('grainseller_birthday', models.CharField(blank=True, default='', help_text='出生年月', max_length=20, null=True)),
                ('grainseller_address', models.CharField(blank=True, default='', help_text='身份证地址', max_length=120, null=True)),
                ('grainseller_issuing_authority', models.CharField(blank=True, default='', help_text='发证机关', max_length=120, null=True)),
                ('grainseller_expiration_date', models.CharField(blank=True, default='', help_text='证件有效期', max_length=30, null=True)),
                ('grainseller_phone', models.CharField(blank=True, default='', help_text='联系电话', max_length=20, null=True)),
                ('grainseller_photo_in_uncode', models.TextField(blank=True, default='', help_text='售粮人身份证内照片', null=True)),
                ('grainseller_bank_name', models.CharField(blank=True, default='', help_text='开户银行名称', max_length=120, null=True)),
                ('grainseller_bank_card_number', models.CharField(blank=True, default='', help_text='银行卡号', max_length=30, null=True)),
                ('grainseller_bank_account', models.CharField(blank=True, default='', help_text='银行账号', max_length=50, null=True)),
                ('driver_name', models.CharField(blank=True, default='', help_text='司机姓名', max_length=80, null=True)),
                ('driver_uncode', models.CharField(blank=True, default='', help_text='司机身份证号', max_length=80, null=True)),
                ('driver_uncode_photo', models.TextField(blank=True, default='', help_text='司机身份证照片', null=True)),
                ('driver_photo', models.TextField(blank=True, default='', help_text='司机照片', null=True)),
                ('vehicle_type', models.CharField(blank=True, default='', help_text='车辆类型', max_length=30, null=True, unique=True)),
                ('vehicle_province', models.CharField(blank=True, default='', help_text='车辆牌照号', max_length=20, null=True)),
                ('grainseller_driver', models.CharField(blank=True, default='是', help_text='售粮人和司机是否同一人', max_length=6, null=True)),
                ('packag_name', models.CharField(blank=True, default='散积', help_text='包装物名称', max_length=30, null=True, unique=True)),
                ('location_number', models.CharField(blank=True, default='', help_text='仓号', max_length=30, null=True, unique=True)),
                ('warehouse_number', models.CharField(blank=True, default='', help_text='货位号', max_length=30, null=True, unique=True)),
                ('total_vehicle_front_photo', models.TextField(blank=True, default='', help_text='毛重过磅车辆正面照片', null=True)),
                ('total_vehicle_rear_photo', models.TextField(blank=True, default='', help_text='毛重过磅车尾照片', null=True)),
                ('empty_vehicle_front_photo', models.TextField(blank=True, default='', help_text='皮重过磅车辆正面照片', null=True)),
                ('empty_vehicle_rear_photo', models.TextField(blank=True, default='', help_text='皮重过磅车尾照片', null=True)),
                ('ownerforgoods_name', models.CharField(default='企业私有', help_text='货权人名称', max_length=120, unique=True)),
                ('ownerforgoods_uncode', models.CharField(default='', help_text='货权人代码', max_length=100)),
                ('ownerforgoods_phonenumber', models.CharField(blank=True, default='', help_text='货权人联系方式', max_length=100, null=True)),
                ('co_owners', models.CharField(blank=True, default='', help_text='货物共有人', max_length=120, null=True)),
                ('AV_name', models.CharField(default='玉米', help_text='收购品种', max_length=50, unique=True)),
                ('purchase_price', models.DecimalField(decimal_places=6, help_text='等级价格', max_digits=12)),
                ('purchase_name', models.CharField(default='', help_text='等级名称', max_length=20, unique=True)),
                ('test_weight_high', models.DecimalField(blank=True, decimal_places=1, help_text='容重上限3.1', max_digits=6, null=True)),
                ('test_weight_low', models.DecimalField(blank=True, decimal_places=1, help_text='容重下限3.1', max_digits=6, null=True)),
                ('defective_kernels', models.DecimalField(blank=True, decimal_places=1, help_text='不完善粒标准3.2', max_digits=6, null=True)),
                ('insect_damaged_kernels', models.DecimalField(blank=True, decimal_places=1, help_text='虫蚀粒标准3.2.1', max_digits=6, null=True)),
                ('spotted_kernels', models.DecimalField(blank=True, decimal_places=1, help_text='病斑粒标准3.2.2', max_digits=6, null=True)),
                ('broken_kernels', models.DecimalField(blank=True, decimal_places=1, help_text='破损粒标准3.2.3', max_digits=6, null=True)),
                ('sprouted_kernels', models.DecimalField(blank=True, decimal_places=1, help_text='生芽粒标准3.2.4', max_digits=6, null=True)),
                ('moldy_kernels', models.DecimalField(blank=True, decimal_places=1, help_text='生霉粒标准3.2.5', max_digits=6, null=True)),
                ('heat_damaged_kernels', models.DecimalField(blank=True, decimal_places=1, help_text='热损伤粒标准3.2.6', max_digits=6, null=True)),
                ('nature_heat_damaged_kernels', models.DecimalField(blank=True, decimal_places=1, help_text='自然热损伤粒标准3.2.6.1', max_digits=6, null=True)),
                ('drying_heat_damaged_kernels', models.DecimalField(blank=True, decimal_places=1, help_text='烘干热损伤粒标准3.2.6.2', max_digits=6, null=True)),
                ('foreign_matter', models.DecimalField(blank=True, decimal_places=1, help_text='杂质标准3.3', max_digits=6, null=True)),
                ('throughs', models.DecimalField(blank=True, decimal_places=1, help_text='筛下物标准3.3.1', max_digits=6, null=True)),
                ('inorganic_impurities', models.DecimalField(blank=True, decimal_places=1, help_text='无机杂质3.3.2', max_digits=6, null=True)),
                ('organic_impurities', models.DecimalField(blank=True, decimal_places=1, help_text='有机杂质3.3.3', max_digits=6, null=True)),
                ('colour', models.CharField(blank=True, default='正常', help_text='色泽3.4', max_length=10, null=True)),
                ('odour', models.CharField(blank=True, default='正常', help_text='气味3.5', max_length=10, null=True)),
                ('moisture_content', models.DecimalField(blank=True, decimal_places=1, help_text='水份标准3.6', max_digits=6, null=True)),
                ('severely_moldy_kernels', models.DecimalField(blank=True, decimal_places=1, help_text='霉变粒标准3.7', max_digits=6, null=True)),
                ('unloadingfee_price', models.DecimalField(decimal_places=4, help_text='卸车费按公斤计算', max_digits=12)),
                ('truevalue_test_weight', models.DecimalField(blank=True, decimal_places=1, help_text='容重', max_digits=6, null=True)),
                ('truevalue_defective', models.DecimalField(blank=True, decimal_places=1, help_text='不完善粒', max_digits=6, null=True)),
                ('truevalue_insect_damaged', models.DecimalField(blank=True, decimal_places=1, help_text='虫蚀粒', max_digits=6, null=True)),
                ('truevalue_spotted', models.DecimalField(blank=True, decimal_places=1, help_text='病斑粒', max_digits=6, null=True)),
                ('truevalue_broken', models.DecimalField(blank=True, decimal_places=1, help_text='破损粒', max_digits=6, null=True)),
                ('truevalue_sprouted', models.DecimalField(blank=True, decimal_places=1, help_text='生芽粒', max_digits=6, null=True)),
                ('truevalue_moldy', models.DecimalField(blank=True, decimal_places=1, help_text='生霉粒', max_digits=6, null=True)),
                ('truevalue_heat_damaged', models.DecimalField(blank=True, decimal_places=1, help_text='热损伤粒', max_digits=6, null=True)),
                ('truevalue_nature_heat_damaged', models.DecimalField(blank=True, decimal_places=1, help_text='自然热损伤粒', max_digits=6, null=True)),
                ('truevalue_drying_heat_damaged', models.DecimalField(blank=True, decimal_places=1, help_text='烘干热损伤粒', max_digits=6, null=True)),
                ('truevalue_foreign_matter', models.DecimalField(blank=True, decimal_places=1, help_text='杂质', max_digits=6, null=True)),
                ('truevalue_throughs', models.DecimalField(blank=True, decimal_places=1, help_text='筛下物', max_digits=6, null=True)),
                ('truevalue_inorganic_impurities', models.DecimalField(blank=True, decimal_places=1, help_text='无机杂质', max_digits=6, null=True)),
                ('truevalue_organic_impurities', models.DecimalField(blank=True, decimal_places=1, help_text='有机杂质', max_digits=6, null=True)),
                ('truevalue_colour', models.CharField(blank=True, default='正常', help_text='色泽', max_length=10, null=True)),
                ('truevalue_odour', models.CharField(blank=True, default='正常', help_text='气味', max_length=10, null=True)),
                ('truevalue_moisture_content', models.DecimalField(blank=True, decimal_places=1, help_text='水份', max_digits=6, null=True)),
                ('truevalue_severely_moldy', models.DecimalField(blank=True, decimal_places=1, help_text='霉变粒', max_digits=6, null=True)),
                ('total_weight', models.DecimalField(decimal_places=0, help_text='毛重', max_digits=12)),
                ('empty_weight', models.DecimalField(decimal_places=0, help_text='皮重', max_digits=12)),
                ('total_subtract_empty_weight', models.DecimalField(decimal_places=0, help_text='毛减皮重量', max_digits=12)),
                ('Weight_deduction_on_site', models.DecimalField(decimal_places=0, help_text='现场掺杂扣减重量', max_digits=12)),
                ('net_weight', models.DecimalField(decimal_places=0, help_text='净重量', max_digits=12)),
                ('defective_deducted', models.DecimalField(decimal_places=0, help_text='不完善粒扣减重量', max_digits=12)),
                ('insect_damaged_deducted', models.DecimalField(decimal_places=0, help_text='虫蚀粒扣减重量', max_digits=12)),
                ('spotted_deducted', models.DecimalField(decimal_places=0, help_text='病斑粒扣减重量', max_digits=12)),
                ('broken_deducted', models.DecimalField(decimal_places=0, help_text='破损粒扣减重量', max_digits=12)),
                ('sprouted_deducted', models.DecimalField(decimal_places=0, help_text='生芽粒扣减重量', max_digits=12)),
                ('moldy_deducted', models.DecimalField(decimal_places=0, help_text='生霉粒扣减重量', max_digits=12)),
                ('heat_damaged_deducted', models.DecimalField(decimal_places=0, help_text='热损伤粒扣减重量', max_digits=12)),
                ('nature_heat_damaged_deducted', models.DecimalField(decimal_places=0, help_text='自然热损伤粒扣减重量', max_digits=12)),
                ('drying_heat_damaged_deducted', models.DecimalField(decimal_places=0, help_text='烘干热损伤粒扣减重量', max_digits=12)),
                ('foreign_matter_deducted', models.DecimalField(decimal_places=0, help_text='杂质扣减重量', max_digits=12)),
                ('throughs_deducted', models.DecimalField(decimal_places=0, help_text='筛下物扣减重量', max_digits=12)),
                ('inorganic_impurities_deducted', models.DecimalField(decimal_places=0, help_text='无机杂质扣减重量', max_digits=12)),
                ('organic_impurities_deducted', models.DecimalField(decimal_places=0, help_text='有机杂质扣减重量', max_digits=12)),
                ('moisture_content_deducted', models.DecimalField(decimal_places=0, help_text='水份扣减重量', max_digits=12)),
                ('severely_moldy_deducted', models.DecimalField(decimal_places=0, help_text='霉变粒扣减重量', max_digits=12)),
                ('deducted_weight', models.DecimalField(decimal_places=4, help_text='定扣重比例', max_digits=8)),
                ('uantitative_weight_deducted', models.DecimalField(decimal_places=0, help_text='定比例扣减重量', max_digits=12)),
                ('pure_weight', models.DecimalField(decimal_places=0, help_text='纯重', max_digits=12)),
                ('unit_price', models.DecimalField(decimal_places=5, help_text='商品单价', max_digits=12)),
                ('accounts_payable', models.DecimalField(decimal_places=2, help_text='应付金额', max_digits=15)),
                ('deduction_unloadingfee_amount', models.DecimalField(decimal_places=2, help_text='扣卸车费', max_digits=15)),
                ('actual_payment', models.DecimalField(decimal_places=2, help_text='实付金额', max_digits=15)),
                ('check_in_datetime', models.DateTimeField(default=django.utils.timezone.now, help_text='登记时间')),
                ('total_weight_datetime', models.DateTimeField(help_text='毛重过磅时间')),
                ('empty_weight_datetime', models.DateTimeField(help_text='皮重过磅时间')),
                ('print_ticket_datetime', models.DateTimeField(help_text=' 结算打票时间')),
                ('payment_datetime', models.DateTimeField(help_text='付款时间')),
                ('upload_datetime', models.DateTimeField(help_text='上传时间')),
                ('check_in_status', models.CharField(blank=True, help_text='完成登记', max_length=1, null=True)),
                ('total_weight_status', models.CharField(blank=True, help_text='完成毛重过磅', max_length=1, null=True)),
                ('empty_weight_status', models.CharField(blank=True, help_text=' 完成皮重过磅', max_length=1, null=True)),
                ('print_ticket_status', models.CharField(blank=True, help_text=' 完成打票', max_length=1, null=True)),
                ('payment_status', models.CharField(blank=True, help_text=' 完成付款', max_length=1, null=True)),
                ('upload_status', models.CharField(blank=True, help_text=' 完成上传', max_length=1, null=True)),
                ('chemist_name', models.CharField(blank=True, help_text='化验员', max_length=50, null=True)),
                ('test_data_entry_name', models.CharField(blank=True, help_text='化验录入员', max_length=50, null=True)),
                ('total_weight_persions_name', models.CharField(blank=True, help_text='毛重检斤员', max_length=50, null=True)),
                ('empty_weight_persions_name', models.CharField(blank=True, help_text='皮重检斤员', max_length=50, null=True)),
                ('weight_persions_name', models.CharField(blank=True, help_text='统一检斤员', max_length=50, null=True)),
                ('print_ticket_persion_name', models.CharField(blank=True, help_text='付款打票员', max_length=50, null=True)),
                ('cash_management_persion_name', models.CharField(blank=True, help_text='现金', max_length=50, null=True)),
                ('accounting_persion_name', models.CharField(blank=True, help_text='会计', max_length=50, null=True)),
                ('payment_persion_name', models.CharField(blank=True, help_text='付款员', max_length=50, null=True)),
                ('enterprise_id', models.ForeignKey(help_text='收购企业ID', on_delete=django.db.models.deletion.CASCADE, to='login.enterprise')),
            ],
        ),
    ]
